# Copyright (c) Quentin DASSIBAT <qdassibat@gmail.com>

#Ecole des Mines de Saint-Etienne (EMSE)
#Ecole Nationale des Travaux Publics de l'Etat (ENTPE)
#Ecole Urbaine de Lyon (EUL)

# Source Code License (GPLv3)

#This software and its source code are licensed under the GNU General Public License (GPL), version 3.0 or later. See the LICENSE file for details.

# Output License (CC BY 4.0)

#Any outputs generated by this software, such as data files, images, or other results, are licensed under the Creative Commons Attribution 4.0 International License (CC BY 4.0).

#You are free to share, adapt, and use these outputs, provided you give appropriate credit to the original author(s). See the LICENSE file for details.

# For details about each license, please refer to:
#- GNU General Public License (GPL), version 3.0: https://www.gnu.org/licenses/gpl-3.0.html
#- Creative Commons Attribution 4.0 International License (CC BY 4.0): http://creativecommons.org/licenses/by/4.0/ 


##################
# Set parameters #
##################

#Import libraries
import os
import relio
import geopandas as gpd
import pandas as pd
import datetime

#Set path and working directories
wd = os.getcwd() #gets the same wd as the wd set in the terminal where Python is loaded. e.g. if the called script is in the parent folder ../, the getcwd() will return the son folder.
InputModelDirectory = f"{wd}/MODEL_inputs"
hydrographicDirectory = f"{wd}/HYDRO_inputs"
tmpDirectory = f"{wd}/tmp"
if os.path.isdir(tmpDirectory) is False:
    os.mkdir(f"{wd}/tmp")
else:
    pass
outputDirectory = f"{wd}/RESAMPLINGoutputs"
if os.path.isdir(outputDirectory) is False:
    os.mkdir(f"{wd}/RESAMPLINGoutputs")
else:
    pass

#Parameters 
AoI = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_envelope5.tif"
bboxAoI = relio.extract_Rasterbbox(AoI)
timeRange = [1996,2005] #for COmposite Runoff Dataset V1 (Fekete et al, 2002) as used in Global Water Scarcity Index (Hoekstra & Mekonen, 2011) #[2000,2020] for Water Balance Model (Wisser et al, 2010) as used in Rockstrom et al 2023 



##################
# Execute module #
##################
globstart = datetime.datetime.now()

print("Retrieve station codes from hubeau.eaufrance.fr according to the spatial extent of the AoI")

dst = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_locations.gpkg"
relio.request_locations_hubeau(bboxAoI,dst,operating=True)
del dst

print("Retrieve Mean Daily Flows from hubeau.eaufrance.fr")

src = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_locations.gpkg"
dst = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_observations.gpkg"
relio.requestFrontendV2_observations_hubeau(src,dst)
del src, dst

print("Compute MMF average and deviation for each station")

#Read observations file
obs = gpd.read_file(f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_observations.gpkg")
stationsList = list(set(obs['code_station']))

l = []

for station in stationsList:

    print(f"Station {len(l)+1}/{len(stationsList)}")
    
    dst = f"{tmpDirectory}/mmf_station_{str(station)}.gpkg"
    d = relio.compute_MeanMonthlyFlow(str(station),obs,dst,timeRange,generate_plot=False)
    l.append(d)
    del dst

print("Concatenate and save to disk")
mmf = pd.concat(l)
final_mmf = gpd.GeoDataFrame(mmf, crs="EPSG:4326")
final_mmf.set_geometry('geometry')
final_mmf.to_file(f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_mmf_period{str(timeRange[0])}{str(timeRange[1])}.gpkg")

print("Total Elapsed Time: ", datetime.datetime.now()-globstart)

with open(f"{tmpDirectory}/log.txt", 'a') as file:
    file.write(f"GAUGINGdata.py Elapsed Time: {str(datetime.datetime.now()-globstart)}\n")
