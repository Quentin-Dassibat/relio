# Copyright (c) Quentin DASSIBAT <qdassibat@gmail.com>

#Ecole des Mines de Saint-Etienne (EMSE)
#Ecole Nationale des Travaux Publics de l'Etat (ENTPE)
#Ecole Urbaine de Lyon (EUL)

# Source Code License (GPLv3)

#This software and its source code are licensed under the GNU General Public License (GPL), version 3.0 or later. See the LICENSE file for details.

# Output License (CC BY 4.0)

#Any outputs generated by this software, such as data files, images, or other results, are licensed under the Creative Commons Attribution 4.0 International License (CC BY 4.0).

#You are free to share, adapt, and use these outputs, provided you give appropriate credit to the original author(s). See the LICENSE file for details.

# For details about each license, please refer to:
#- GNU General Public License (GPL), version 3.0: https://www.gnu.org/licenses/gpl-3.0.html
#- Creative Commons Attribution 4.0 International License (CC BY 4.0): http://creativecommons.org/licenses/by/4.0/ 


##################
# Set parameters #
##################

#Import libraries
import os
import relio
import numpy as np
import geopandas as gpd
from osgeo import gdal, osr
gdal.UseExceptions()
import datetime

#Set path and working directories
wd = os.getcwd()
InputModelDirectory = f"{wd}/MODEL_inputs"
hydrographicDirectory = f"{wd}/HYDRO_inputs"

tmpDirectory = f"{wd}/tmp"
if os.path.isdir(tmpDirectory) is False:
    os.mkdir(f"{wd}/tmp")
else:
    pass

outputDirectory = f"{wd}/RESAMPLINGoutputs"
if os.path.isdir(outputDirectory) is False:
    os.mkdir(f"{wd}/RESAMPLINGoutputs")
else:
    pass

#Parameters 
timeRange = [2000,2020]
EPSG = 4326
epsilonAccuflux = 1e3
epsilonOutlet = 1e5
modelRun = "DIST"
bandNumber = 1
layer = f"MMFmu_month{str(bandNumber)}_{str(timeRange[0])}{str(timeRange[1])}"
#Number of WBM catchments
subcatchmentsRaster = f"{outputDirectory}/OutletsLocations_sup{str(epsilonOutlet)}_mod{modelRun}_band1_subcatchments.map"
r = gdal.Open(subcatchmentsRaster)
band = r.GetRasterBand(1)
subcatch = band.ReadAsArray().astype(int)
nb_subcatch = np.max(subcatch)
del r


##################
# Execute module #
##################
globstart = datetime.datetime.now()

print("Band Number",bandNumber)

print("Join accuflux raster with point gauging data")

points = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_gauging_stations_mmf_period{str(timeRange[0])}{str(timeRange[1])}.gpkg"
acc = f"{hydrographicDirectory}/DEMx_SRTM30_wgs84_pcraster_accuflux_sup{str(epsilonAccuflux)}.tif"
dst = f"{tmpDirectory}/StationsMergedAccuflux_{layer}.gpkg"
relio.join_points_to_pixels(points,layer,acc,EPSG,dst) #The returned geodataFrame has a column labelled "values" for accuflux values retrieved from raster
del dst

#Then correct accuracy of station locations based on the comparison of discharge values and accuflux values (manual operation with QGIS)
#Corrected file saved with path: f"{tmpDirectory}/StationsMergedAccuflux_{layer}_correct.gpkg"


print("Total Elapsed Time: ", datetime.datetime.now()-globstart)

with open(f"{tmpDirectory}/log.txt", "a") as file:
    file.write(f"JOINaccuflux2stations.py Elapsed Time: {str(datetime.datetime.now()-globstart)}\n")