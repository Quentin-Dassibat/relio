###########
# License #
###########

Copyright (c) Quentin DASSIBAT <qdassibat@gmail.com>
-
Ecole des Mines de Saint-Etienne (EMSE)
Ecole Nationale des Travaux Publics de l'Etat (ENTPE)
Ecole Urbaine de Lyon (EUL)

# Source Code License (GPLv3)

This software and its source code are licensed under the GNU General Public License (GPL), version 3.0 or later. See the LICENSE file for details.

# Output License (CC BY 4.0)

Any outputs generated by this software, such as data files, images, or other results, are licensed under the Creative Commons Attribution 4.0 International License (CC BY 4.0).

You are free to share, adapt, and use these outputs, provided you give appropriate credit to the original author(s). See the LICENSE file for details.

# For details about each license, please refer to:
- GNU General Public License (GPL), version 3.0: https://www.gnu.org/licenses/gpl-3.0.html
- Creative Commons Attribution 4.0 International License (CC BY 4.0): http://creativecommons.org/licenses/by/4.0/ 

################
# Introduction #
################

<relio> is a set of scripts that build up a model to resample raster images featuring hydrological data.

The model is designed to take a low resolution (typically 1e3m x 1e3m) raster file of GCM-generated hydrological data (typically water discharge) and convert it to a high resolution raster file (typically 1e1m x 1e1m).

It is a statistical-physical mixture model that prevents running sophisticated LCMs to get higher resolution data but builds its satistical resampling technic upon a routed flow constraint (conversely to conventionnal GIS resempling algorithms, which are built upon the hypothesis of continuous domains).

Across 20 scripts, it implements 3 main algorithms: 
1. A derasterization algorithm used to breakdown the source grid cells
2. A convolution algorithm used to spread hydrological data accross the destination grid cells
3. A (optionnal) rasterization algorithm used to map hydrological point data to the destination grid cells 

#######################
# Basic documentation #
#######################

Whereas <relio> as a model could be used on any Global Climate Model's outputs featuring hydrological data, as a set of scripts it has been developped for the need of a specific GCM: the WBM model's outputs of flow discharges, as available in (Rockstrom 2023, SM). 

The 20 scripts work in a sequential order, which can be found under the < scripts_sequences.html > file.
This file organizes scripts by level: 
- level 0: used to set a proper envelope that bounds the Area of Interest so as to minimize the number of river channels flowinf into the AoI
- level 1: used to generate initial hydrographical material (optionnally retrieve point-like observationnal flow data from hubeau.france.fr's API)
- level 2: used to breakdown the source raster image into outlets and subcatchments defined in the destination raster (and optionnally map point-like observationnal data to that destination raster)
- level 3: used to spread data accross the destination grid cells following a routing constraint 
- level 4 (results): set of scripts designed to compare the resampled model to the mapped observationnal data

Along these scripts, a set of parameters is invoked: 
- modelRun: DISTurbed or PRISTine model run of the WBM
- bandNumber: ranging from 1 to 12, corresponds to a month of the year
- alphaA: global flow accumulation threshold used to model the channel network 
- alphaB: outlet-specific flow accumulation threshold used to prevent delineating too small subcatchments around the edges of the AoI
- betaP: vector (numpy.array) of boundary conditions used to initialized the flow accumulation raster with transport material from upstream the AoI 
- delta: vector of Euclidian distances betwwen the position of a gauging station within the modeled channel network and the actual channel network (used in the case that observationnal flow data is retrieved and mapped)

#######################
# Directory structure #
#######################

Since the scripts have been developed on the purpose of resampling a specific GCM (WBM raster data) to a specific AoI (the Sud-Loire region in France), they still do not make up a stand-alone software for resampling any GCM's outputs to any AoI. 

We are under the working directory ~/ where we create a new directory, say ~/relio/
Under ~/relio/ we found: 

2 folders are required to be built manually and uploaded with material before running scripts:
./HYDRO_inputs
    -> envelope layer for the AoI
    -> DEM as raster image matching the size of the AoI
    -> topographic channel network as a vector layer
./MODEL_inputs
    -> WBM raster images 

2 floders are then created upon call by scripts: 
./tmp (to store temporary files)
./RESAMPLINGoutputs (to store outputs)

20 scripts stored in ~/relio/ main folder